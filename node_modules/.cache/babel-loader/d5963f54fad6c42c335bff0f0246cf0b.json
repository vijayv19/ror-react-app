{"ast":null,"code":"var _jsxFileName = \"/home/vijayvaidya/ror-react-app/app/javascript/Components/edit-student.component.js\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// EditStudent Component for update student data\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\"; // EditStudent Component\n\nvar EditStudent = function EditStudent(props) {\n  var _useState = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    rollno: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1]; //onSubmit handler\n\n\n  var onSubmit = function onSubmit(studentObject) {\n    axios.put(\"http://localhost:3000/api/students/\" + props.match.params.id, studentObject).then(function (res) {\n      if (res.status === 200) {\n        alert(\"Student successfully updated\");\n        props.history.push(\"/student-list\");\n      } else Promise.reject();\n    })[\"catch\"](function (err) {\n      return alert(\"Something went wrong\");\n    });\n  }; // Load data from server and reinitialize student form\n\n\n  useEffect(function () {\n    axios.get(\"http://localhost:3000/api/students/\" + props.match.params.id).then(function (res) {\n      var _res$data = res.data,\n          id = _res$data.id,\n          name = _res$data.name,\n          email = _res$data.email,\n          rollno = _res$data.rollno;\n      setFormValues({\n        id: id,\n        name: name,\n        email: email,\n        rollno: rollno\n      });\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []); // Return student form\n\n  return /*#__PURE__*/React.createElement(StudentForm, {\n    initialValues: formValues,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 2\n    }\n  }, \"Update Student\");\n}; // Export EditStudent Component\n\n\nexport default EditStudent;","map":{"version":3,"sources":["/home/vijayvaidya/ror-react-app/app/javascript/Components/edit-student.component.js"],"names":["React","useState","useEffect","axios","StudentForm","EditStudent","props","id","name","email","rollno","formValues","setFormValues","onSubmit","studentObject","put","match","params","then","res","status","alert","history","push","Promise","reject","err","get","data","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC/B,kBAAoCL,QAAQ,CAAC;AAC5CM,IAAAA,EAAE,EAAE,EADwC;AAE5CC,IAAAA,IAAI,EAAE,EAFsC;AAG5CC,IAAAA,KAAK,EAAE,EAHqC;AAI5CC,IAAAA,MAAM,EAAE;AAJoC,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB,iBAD+B,CAQ/B;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,aAAD,EAAmB;AACnCX,IAAAA,KAAK,CACJY,GADD,CAEC,wCACAT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBV,EAHpB,EAICO,aAJD,EAMCI,IAND,CAMM,UAACC,GAAD,EAAS;AACd,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACxBC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACAf,QAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,eAAnB;AACC,OAHD,MAGOC,OAAO,CAACC,MAAR;AACP,KAXD,WAYO,UAACC,GAAD;AAAA,aAASL,KAAK,CAAC,sBAAD,CAAd;AAAA,KAZP;AAaA,GAdD,CAT+B,CAyB/B;;;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACfC,IAAAA,KAAK,CACJwB,GADD,CAEC,wCACErB,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBV,EAHtB,EAKCW,IALD,CAKM,UAACC,GAAD,EAAS;AACd,sBAAmCA,GAAG,CAACS,IAAvC;AAAA,UAAQrB,EAAR,aAAQA,EAAR;AAAA,UAAWC,IAAX,aAAWA,IAAX;AAAA,UAAiBC,KAAjB,aAAiBA,KAAjB;AAAA,UAAwBC,MAAxB,aAAwBA,MAAxB;AACAE,MAAAA,aAAa,CAAC;AAAEL,QAAAA,EAAE,EAAFA,EAAF;AAAKC,QAAAA,IAAI,EAAJA,IAAL;AAAWC,QAAAA,KAAK,EAALA,KAAX;AAAkBC,QAAAA,MAAM,EAANA;AAAlB,OAAD,CAAb;AACA,KARD,WASO,UAACgB,GAAD;AAAA,aAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAAT;AAAA,KATP;AAUA,GAXQ,EAWN,EAXM,CAAT,CA1B+B,CAuC/B;;AACA,sBACC,oBAAC,WAAD;AACA,IAAA,aAAa,EAAEf,UADf;AAEA,IAAA,QAAQ,EAAEE,QAFV;AAGA,IAAA,kBAAkB,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD;AASC,CAjDD,C,CAmDA;;;AACA,eAAeR,WAAf","sourcesContent":["// EditStudent Component for update student data\n\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\";\n\n// EditStudent Component\nconst EditStudent = (props) => {\nconst [formValues, setFormValues] = useState({\n\tid: \"\",\n\tname: \"\",\n\temail: \"\",\n\trollno: \"\",\n});\n\t\n//onSubmit handler\nconst onSubmit = (studentObject) => {\n\taxios\n\t.put(\n\t\t\"http://localhost:3000/api/students/\" +\n\t\tprops.match.params.id,\n\t\tstudentObject\n\t)\n\t.then((res) => {\n\t\tif (res.status === 200) {\n\t\talert(\"Student successfully updated\");\n\t\tprops.history.push(\"/student-list\");\n\t\t} else Promise.reject();\n\t})\n\t.catch((err) => alert(\"Something went wrong\"));\n};\n\n// Load data from server and reinitialize student form\nuseEffect(() => {\n\taxios\n\t.get(\n\t\t\"http://localhost:3000/api/students/\"\n\t\t+ props.match.params.id\n\t)\n\t.then((res) => {\n\t\tconst { id,name, email, rollno } = res.data;\n\t\tsetFormValues({ id,name, email, rollno });\n\t})\n\t.catch((err) => console.log(err));\n}, []);\n\n// Return student form\nreturn (\n\t<StudentForm\n\tinitialValues={formValues}\n\tonSubmit={onSubmit}\n\tenableReinitialize\n\t>\n\tUpdate Student\n\t</StudentForm>\n);\n};\n\n// Export EditStudent Component\nexport default EditStudent;\n"]},"metadata":{},"sourceType":"module"}