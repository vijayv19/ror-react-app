{"ast":null,"code":"var _jsxFileName = \"/home/vijayvaidya/ror-react-app/app/javascript/Components/get-student.component.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      students = _useState2[0],\n      setStudents = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterData = _useState4[0],\n      setFilterData = _useState4[1];\n\n  var studentdata = 'http://localhost:3000/api/students.json';\n\n  function getStudents() {\n    fetch(studentdata).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      setFilterData(data.students);\n      setStudents(data.students);\n    });\n  }\n\n  var searchById = function searchById(event) {\n    event.persist(); // Get the search term\n\n    var searchItem = event.target.value.trim();\n    console.log('searchItem', searchItem); // If search term is empty fill with full students data\n\n    if (!searchItem.trim()) {\n      setFilterData(students);\n    } // Search the name and if it found retun the same array\n\n\n    var serachIn = function serachIn(id) {\n      if (id.indexOf(searchItem) !== -1) {\n        return true;\n      }\n\n      return false;\n    }; // Filter the array \n\n\n    var filteredData = students.filter(function (item) {\n      return serachIn(item.id);\n    }); // Set the state with filtered data\n\n    setFilterData(filteredData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Find the Student\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    onClick: getStudents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Get Students\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    id: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"serachById\",\n    onChange: function onChange(e) {\n      return searchById(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), filterData && filterData.map(function (student, index) {\n    var total = 0;\n\n    for (var i = 0; i < student.grades.length; i++) {\n      var grade = parseInt(student.grades[i]);\n      total += grade;\n    }\n\n    var avg = total / student.grades.length;\n    var average = avg.toString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"student\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: student.pic,\n      id: \"icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \" \", student.name), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"detail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }, \"EMAIL:\"), \" \", student.email), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"detail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }\n    }, \"COMPANY:\"), \" \", student.rollno), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"detail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }\n    }, \"SKILL:\"), \" \", student.address), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"detail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }\n    }, \"AVERAGE:\"), \": \", average, \"%\")));\n  }));\n}","map":{"version":3,"sources":["/home/vijayvaidya/ror-react-app/app/javascript/Components/get-student.component.js"],"names":["React","useState","App","students","setStudents","filterData","setFilterData","studentdata","getStudents","fetch","then","resp","json","data","searchById","event","persist","searchItem","target","value","trim","console","log","serachIn","id","indexOf","filteredData","filter","item","e","map","student","index","total","i","grades","length","grade","parseInt","avg","average","toString","pic","name","email","rollno","address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function App() {\n  const [students, setStudents] = useState(null);\n  const [filterData, setFilterData ] = useState(null);\n\n  const studentdata = 'http://localhost:3000/api/students.json';\n\n  function getStudents(){\n    fetch(studentdata)\n      .then(resp => resp.json())\n      .then(data => {\n        setFilterData(data.students);\n        setStudents(data.students);\n      })\n  }\n\n  const searchById = (event) => {\n    event.persist();\n    // Get the search term\n    const searchItem = event.target.value.trim();\n    console.log('searchItem',searchItem);\n    // If search term is empty fill with full students data\n    if(!searchItem.trim()) {\n      setFilterData(students);\n    }\n    // Search the name and if it found retun the same array\n    const serachIn = (id) => {\n      if(id.indexOf(searchItem) !== -1) {\n        return true;\n      }\n      return false;\n    };\n    // Filter the array \n    const filteredData = students.filter((item) => {\n      return serachIn(item.id);\n    });\n    // Set the state with filtered data\n    setFilterData(filteredData);\n  }\n\n   return (\n    <div className=\"App\">\n      <h1>Find the Student</h1>\n\n      <div>\n        <button className=\"submit\" onClick={getStudents}>\n          Get Students\n        </button>\n        <br />\n      </div>\n\n      <div className=\"search\" id=\"search\">\n          <input type=\"number\" name=\"serachById\" onChange={(e) => searchById(e)} ></input>\n      </div>\n\n      {filterData && filterData.map((student, index) => {\n       var total = 0;\n       for(var i = 0; i < student.grades.length; i++) {\n        var grade = parseInt(student.grades[i]);\n        total += grade;\n       }\n       const avg = total / student.grades.length;\n       const average = avg.toString();\n\n\n      return(\n      <div className=\"student\" key={index}>\n        <div className=\"image\">\n          <img src={student.pic} id=\"icon\"></img>\n        </div>\n\n        <div className=\"text\">\n          <h3 id=\"name\"> {student.name}</h3>\n          <p id=\"detail\"><strong>EMAIL:</strong> {student.email}</p>\n          <p id=\"detail\"><strong>COMPANY:</strong> {student.rollno}</p>\n          <p id=\"detail\"><strong>SKILL:</strong> {student.address}</p>\n          <p id=\"detail\"><strong>AVERAGE:</strong>: {average}%</p>\n        </div>\n      </div>\n\n      )}\n      )}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}