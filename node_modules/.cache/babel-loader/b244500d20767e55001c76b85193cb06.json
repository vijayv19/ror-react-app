{"ast":null,"code":"var _jsxFileName = \"/home/vijayvaidya/ror-react-app/app/javascript/Components/StudentForm.js\",\n    _this = this;\n\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\n\nvar StudentForm = function StudentForm(props) {\n  var validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Rquired\"),\n    email: Yup.string().email(\"You have enter an invalid email address\").required(\"Rquired\"),\n    rollno: Yup.number().positive(\"Invalid roll number\").integer(\"Invalid roll number\").required(\"Rquired\")\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"formik\", Object.assign({}, props, {\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    className: \"d-block invalid-feedback\",\n    component: \"span\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"field\", {\n    name: \"email\",\n    type: \"text\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    className: \"d-block invalid-feedback\",\n    component: \"span\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"field\", {\n    name: \"rollno\",\n    type: \"number\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"rollno\",\n    className: \"d-block invalid-feedback\",\n    component: \"span\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"danger\",\n    size: \"lg\",\n    block: \"block\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, props.children))));\n};\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/vijayvaidya/ror-react-app/app/javascript/Components/StudentForm.js"],"names":["React","Yup","Formik","Form","Field","ErrorMessage","FormGroup","FormControl","Button","StudentForm","props","validationSchema","object","shape","name","string","required","email","rollno","number","positive","integer","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,iBAA/C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAMC,gBAAgB,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,SAAtB,CADoC;AAE1CC,IAAAA,KAAK,EAAEhB,GAAG,CAACc,MAAJ,GACJE,KADI,CACE,yCADF,EAEJD,QAFI,CAEK,SAFL,CAFmC;AAK1CE,IAAAA,MAAM,EAAEjB,GAAG,CAACkB,MAAJ,GACLC,QADK,CACI,qBADJ,EAELC,OAFK,CAEG,qBAFH,EAGLL,QAHK,CAGI,SAHJ;AALkC,GAAnB,CAAzB;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,gDAAYN,KAAZ;AAAmB,IAAA,gBAAgB,EAAEC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AACI,IAAA,SAAS,EAAC,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,MAAzB;AACI,IAAA,SAAS,EAAC,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAVF,eAmBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AACI,IAAA,SAAS,EAAC,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAnBF,eA4BE;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAC,IAA9B;AACE,IAAA,KAAK,EAAC,OADR;AACgB,IAAA,IAAI,EAAC,QADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,KAAK,CAACY,QAFT,CA5BF,CADF,CADF,CADF;AAuCD,CAlDD;;AAoDA,eAAeb,WAAf","sourcesContent":["import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { FormGroup, FormControl, Button } from \"react-bootstrap\";\n  \nconst StudentForm = (props) => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Rquired\"),\n    email: Yup.string()\n      .email(\"You have enter an invalid email address\")\n      .required(\"Rquired\"),\n    rollno: Yup.number()\n      .positive(\"Invalid roll number\")\n      .integer(\"Invalid roll number\")\n      .required(\"Rquired\"),\n  });\n  return (\n    <div className=\"form-wrapper\">\n      <formik {...props} validationSchema={validationSchema}>\n        <Form>\n          <FormGroup>\n            <Field name=\"name\" type=\"text\" \n                className=\"form-control\" />\n            <ErrorMessage\n              name=\"name\"\n              className=\"d-block invalid-feedback\"\n              component=\"span\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <field name=\"email\" type=\"text\" \n                className=\"form-control\" />\n            <ErrorMessage\n              name=\"email\"\n              className=\"d-block invalid-feedback\"\n              component=\"span\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <field name=\"rollno\" type=\"number\" \n                className=\"form-control\" />\n            <ErrorMessage\n              name=\"rollno\"\n              className=\"d-block invalid-feedback\"\n              component=\"span\"\n            />\n          </FormGroup>\n          <button variant=\"danger\" size=\"lg\" \n            block=\"block\" type=\"submit\">\n            {props.children}\n          </button>\n        </Form>\n      </formik>\n    </div>\n  );\n};\n  \nexport default StudentForm;"]},"metadata":{},"sourceType":"module"}